# ------------------------------------------------------------
# 目的:
#   - Claude Code に「結果は results/ へ」「データは data/ へ」など
#     一連の制約を常時読ませる
#   - 必要最小限の Bash 実行やファイル編集を許可しつつ、安全に自動化
# ------------------------------------------------------------

system_prompt: |
  # Output & Directory Guidelines
  1. 解析結果 (ログ・CSV・レポート等) は **指示がない限り `results/`** に保存すること。
     - 既存ファイルを上書きせず、同名ファイルがあれば `_1`, `_2` と連番を付ける。
  2. データセットは **`data/`** に格納すること。
  3. 各タスク完了時に `results/` 内に期待ファイルが存在するか必ず検証する。
  4. `setup.sh` が `mkdir -p results data` を実行済みである前提とする。
  # Analysis Execution Rules
  5. 解析は **Python スクリプト (`*.py`)** から実行する。
  6. R を使う場合は Python 経由で呼び出すこと。
     - `subprocess.run(["Rscript", …])` ないし `rpy2` を用いる。
     - `.R` を直接実行させてはならない。
  7. エラー時は:
     - `results/error_<timestamp>.log` に stdout/stderr を保存。
     - `results/fix_<timestamp>.txt` に原因・理由・修正案 (30 行以内) を記述。
     - 再試行は **1 回** のみ。以降ループしない。
  # Verification
  8. テストや self-check では `results/` のファイル名・数を確認し合否判定。
  # Script Placement & Naming
  9. 解析用スクリプトはすべて `analysis_steps/NNN_<slug>.py` とし、NNN は連番。
 10. 新規追加時は既存最大番号 +1 を採番し、欠番を作らない。
  # Notebook Generation (make notebook)
 11. `make notebook` では `analysis_steps/*.py` を 1 セルずつまとめて
     `notebooks_build/execution_log.ipynb` を生成。
     - 出力セルは含めず、コードと Markdown 見出しのみ残す。

# ---- ★ allowed_tools を改行区切りに修正 ★ ----
allowedTools: |
  Bash(:)
  Edit
  mcp__github_file_ops__commit_files

timeout_minutes: 30
concurrency:
  group: "claude"
  cancel-in-progress: false
